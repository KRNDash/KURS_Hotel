//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hostel_MVC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HostelEntities : DbContext
    {
        public HostelEntities()
            : base("name=HostelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Booking> Booking { get; set; }
        public virtual DbSet<Check_in> Check_in { get; set; }
        public virtual DbSet<Resident> Resident { get; set; }
        public virtual DbSet<Room> Room { get; set; }
    
        public virtual int add_Booking(string resident_passport, Nullable<int> room_roomNum, Nullable<byte> count, Nullable<System.DateTime> dateIn, Nullable<System.DateTime> dateOut)
        {
            var resident_passportParameter = resident_passport != null ?
                new ObjectParameter("Resident_passport", resident_passport) :
                new ObjectParameter("Resident_passport", typeof(string));
    
            var room_roomNumParameter = room_roomNum.HasValue ?
                new ObjectParameter("Room_roomNum", room_roomNum) :
                new ObjectParameter("Room_roomNum", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(byte));
    
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("dateIn", dateIn) :
                new ObjectParameter("dateIn", typeof(System.DateTime));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("dateOut", dateOut) :
                new ObjectParameter("dateOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_Booking", resident_passportParameter, room_roomNumParameter, countParameter, dateInParameter, dateOutParameter);
        }
    
        public virtual int add_Check_in(Nullable<int> booking_idBooking, string resident_passport)
        {
            var booking_idBookingParameter = booking_idBooking.HasValue ?
                new ObjectParameter("Booking_idBooking", booking_idBooking) :
                new ObjectParameter("Booking_idBooking", typeof(int));
    
            var resident_passportParameter = resident_passport != null ?
                new ObjectParameter("Resident_passport", resident_passport) :
                new ObjectParameter("Resident_passport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_Check_in", booking_idBookingParameter, resident_passportParameter);
        }
    
        public virtual int add_Resident(string passport, string surname, string name, string patronymic)
        {
            var passportParameter = passport != null ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("patronymic", patronymic) :
                new ObjectParameter("patronymic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_Resident", passportParameter, surnameParameter, nameParameter, patronymicParameter);
        }
    
        public virtual int add_Room(Nullable<int> roomNum, Nullable<byte> count, string roomStatus)
        {
            var roomNumParameter = roomNum.HasValue ?
                new ObjectParameter("roomNum", roomNum) :
                new ObjectParameter("roomNum", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(byte));
    
            var roomStatusParameter = roomStatus != null ?
                new ObjectParameter("roomStatus", roomStatus) :
                new ObjectParameter("roomStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_Room", roomNumParameter, countParameter, roomStatusParameter);
        }
    
        public virtual int del_Booking(Nullable<int> idBooking)
        {
            var idBookingParameter = idBooking.HasValue ?
                new ObjectParameter("idBooking", idBooking) :
                new ObjectParameter("idBooking", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_Booking", idBookingParameter);
        }
    
        public virtual int del_Check_in(Nullable<long> idCheck_in)
        {
            var idCheck_inParameter = idCheck_in.HasValue ?
                new ObjectParameter("idCheck_in", idCheck_in) :
                new ObjectParameter("idCheck_in", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_Check_in", idCheck_inParameter);
        }
    
        public virtual int del_Resident(string passport)
        {
            var passportParameter = passport != null ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_Resident", passportParameter);
        }
    
        public virtual int del_Room(string roomNum)
        {
            var roomNumParameter = roomNum != null ?
                new ObjectParameter("roomNum", roomNum) :
                new ObjectParameter("roomNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_Room", roomNumParameter);
        }
    
        public virtual int gen_Booking(Nullable<int> count1)
        {
            var count1Parameter = count1.HasValue ?
                new ObjectParameter("count1", count1) :
                new ObjectParameter("count1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gen_Booking", count1Parameter);
        }
    
        public virtual ObjectResult<gen_Check_In_Result> gen_Check_In(Nullable<int> count1)
        {
            var count1Parameter = count1.HasValue ?
                new ObjectParameter("count1", count1) :
                new ObjectParameter("count1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<gen_Check_In_Result>("gen_Check_In", count1Parameter);
        }
    
        public virtual int gen_Resident(Nullable<int> count)
        {
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gen_Resident", countParameter);
        }
    
        public virtual int gen_Room(Nullable<int> count1)
        {
            var count1Parameter = count1.HasValue ?
                new ObjectParameter("count1", count1) :
                new ObjectParameter("count1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gen_Room", count1Parameter);
        }
    
        public virtual ObjectResult<Procedure1_Result> Procedure1(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Procedure1_Result>("Procedure1", dateParameter);
        }
    
        public virtual ObjectResult<Procedure2_Result> Procedure2(Nullable<System.DateTime> dateIn, Nullable<System.DateTime> dateOut)
        {
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("dateIn", dateIn) :
                new ObjectParameter("dateIn", typeof(System.DateTime));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("dateOut", dateOut) :
                new ObjectParameter("dateOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Procedure2_Result>("Procedure2", dateInParameter, dateOutParameter);
        }
    
        public virtual ObjectResult<sel_Booking_Result> sel_Booking(Nullable<int> idBooking)
        {
            var idBookingParameter = idBooking.HasValue ?
                new ObjectParameter("idBooking", idBooking) :
                new ObjectParameter("idBooking", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sel_Booking_Result>("sel_Booking", idBookingParameter);
        }
    
        public virtual ObjectResult<sel_Check_in_Result> sel_Check_in(Nullable<int> idCheck_in)
        {
            var idCheck_inParameter = idCheck_in.HasValue ?
                new ObjectParameter("IdCheck_in", idCheck_in) :
                new ObjectParameter("IdCheck_in", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sel_Check_in_Result>("sel_Check_in", idCheck_inParameter);
        }
    
        public virtual ObjectResult<sel_Resident_Result> sel_Resident(string passport)
        {
            var passportParameter = passport != null ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sel_Resident_Result>("sel_Resident", passportParameter);
        }
    
        public virtual ObjectResult<sel_Room_Result> sel_Room(Nullable<int> roomNum)
        {
            var roomNumParameter = roomNum.HasValue ?
                new ObjectParameter("roomNum", roomNum) :
                new ObjectParameter("roomNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sel_Room_Result>("sel_Room", roomNumParameter);
        }
    
        public virtual int update_Booking(Nullable<int> idBooking, string resident_passport, Nullable<int> room_roomNum, Nullable<byte> count, Nullable<System.DateTime> dateIn, Nullable<System.DateTime> dateOut)
        {
            var idBookingParameter = idBooking.HasValue ?
                new ObjectParameter("idBooking", idBooking) :
                new ObjectParameter("idBooking", typeof(int));
    
            var resident_passportParameter = resident_passport != null ?
                new ObjectParameter("Resident_passport", resident_passport) :
                new ObjectParameter("Resident_passport", typeof(string));
    
            var room_roomNumParameter = room_roomNum.HasValue ?
                new ObjectParameter("Room_roomNum", room_roomNum) :
                new ObjectParameter("Room_roomNum", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(byte));
    
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("dateIn", dateIn) :
                new ObjectParameter("dateIn", typeof(System.DateTime));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("dateOut", dateOut) :
                new ObjectParameter("dateOut", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Booking", idBookingParameter, resident_passportParameter, room_roomNumParameter, countParameter, dateInParameter, dateOutParameter);
        }
    
        public virtual int update_Check_in(Nullable<long> idCheck_in, Nullable<int> booking_idBooking, string resident_passport)
        {
            var idCheck_inParameter = idCheck_in.HasValue ?
                new ObjectParameter("IdCheck_in", idCheck_in) :
                new ObjectParameter("IdCheck_in", typeof(long));
    
            var booking_idBookingParameter = booking_idBooking.HasValue ?
                new ObjectParameter("Booking_idBooking", booking_idBooking) :
                new ObjectParameter("Booking_idBooking", typeof(int));
    
            var resident_passportParameter = resident_passport != null ?
                new ObjectParameter("Resident_passport", resident_passport) :
                new ObjectParameter("Resident_passport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Check_in", idCheck_inParameter, booking_idBookingParameter, resident_passportParameter);
        }
    
        public virtual int update_Resident(string passport, string surname, string name, string patronymic)
        {
            var passportParameter = passport != null ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("patronymic", patronymic) :
                new ObjectParameter("patronymic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Resident", passportParameter, surnameParameter, nameParameter, patronymicParameter);
        }
    
        public virtual int update_Room(Nullable<int> roomNum, Nullable<byte> count, string roomStatus)
        {
            var roomNumParameter = roomNum.HasValue ?
                new ObjectParameter("roomNum", roomNum) :
                new ObjectParameter("roomNum", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(byte));
    
            var roomStatusParameter = roomStatus != null ?
                new ObjectParameter("roomStatus", roomStatus) :
                new ObjectParameter("roomStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Room", roomNumParameter, countParameter, roomStatusParameter);
        }
    }
}
